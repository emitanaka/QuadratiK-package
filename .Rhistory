x
roxygen2::roxygenise()
install.packages("pkgdown")
usethis::use_pkgdown()
pkgdown::build_site()
roxygen2::roxygenise()
pkgdown::build_site()
a <- list("1","2")
is.vector(a)
true_label <- list("1","2")
(is.factor(true_label) | is.vector(true_label)) &!is.list(true_label)
!is.list(true_label)
true_label <- factor("1","2")
true_label
true_label <- factor(rep(c("1","2"),5))
true_label
is.vector(true_label)
is.factor(true_label)
true_label <- as.factor(as.numeric(true_label))
A <-matrix(c(1,2,3,4),nrow=2)
is.numeric(A)
a <- 3
is.vector(a)
is.vector(A)
a <- data.frame(c(1,NaN))
a
b <- as.matrix(a)
b
is.numeric(b)
a <- data.frame(c(1,inf))
a <- data.frame(c(1,Inf))
a
b <- as.matrix(a)
is.numeric(b)
b
?any
roxygen2::roxygenise()
devtools::build_vignettes()
devtools::document()
devtools::document()
roxygen2::roxygenise()
debug(roxygen2::roxygenise())
roxygen2::roxygenise()
devtools::check()
remove.packages("QuadratiK")
devtools::check()
roxygen2::roxygenise()
val1 <- validation(pkbc(dat, 2), true_label = NULL, elbow.plot = FALSE)
dat<-rbind(matrix(rnorm(50),ncol=2), matrix(rnorm(50,4),ncol=2))
y <- rep(c(1,2),each=25)
val1 <- validation(pkbc(dat, 2), true_label = NULL, elbow.plot = FALSE)
expect_equal(nrow(val1$metrics),5)
library(testthat)
expect_equal(nrow(val1$metrics),5)
expect_null(val1$elbow)
expect_equal(length(val1$IGP), 2)
val2 <- validation(pkbc(dat, c(2,3,4)), true_label = y, elbow.plot = TRUE)
expect_equal(nrow(val2$metrics),8)
expect_equal(length(val2$IGP), 4)
# dimension = 2
dat<-rbind(matrix(rnorm(50),ncol=2),
matrix(rnorm(50,4),ncol=2),
matrix(rnorm(50,2),ncol=2))
y <- rep(c(1,2,3),each=25)
pkbd_res<- pkbc(dat, c(2,3))
expect_error(summary_stat(pkbd_res, 4),
"The provided pkbc object does not contain results for the requested
number of clusters")
res1 <- summary_stat(pkbd_res, 3, true_label = NULL)
res2 <- summary_stat(pkbd_res, 3, true_label = y)
expect_equal(length(res1$metrics), 2)
expect_equal(length(res2$metrics), 2)
# dimension = 3
dat<-rbind(matrix(rnorm(60),ncol=3),
matrix(rnorm(60,4),ncol=3),
matrix(rnorm(60,2),ncol=3))
y <- rep(c(1,2,3),each=20)
pkbd_res<- pkbc(dat, c(2,3))
res1 <- summary_stat(pkbd_res, 2, true_label = NULL)
res2 <- summary_stat(pkbd_res, 3, true_label = y)
expect_equal(length(res1$metrics), 3)
expect_equal(length(res2$metrics), 3)
# dimension = 4
dat<-rbind(matrix(rnorm(60),ncol=4),
matrix(rnorm(60,4),ncol=4),
matrix(rnorm(60,2),ncol=4))
y <- rep(c(1,2,3),each=15)
pkbd_res<- pkbc(dat, c(2,3))
res1 <- summary_stat(pkbd_res, 2, true_label = NULL)
expect_equal(length(res1$metrics), 4)
res2 <- summary_stat(pkbd_res, 3, true_label = y)
expect_equal(length(res2$metrics), 4)
devtools::build_vignettes()
devtools::build_manual()
devtools::load_all()
devtools::document()
roxygen2::roxygenise()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenize()
roxygen2::roxygenise()
library(pkgcheck)
x <- pkgcheck()
x <- pkgcheck()
summary(x)
x
roxygen2::roxygenise()
roxygen2::roxygenise()
library(pkgcheck)
x <- pkgcheck()
x <- pkgcheck()
summary(x)
x
library(autotest)
b <- autotest_package()
library(srr)
srr_stats_pre_submit()
srr_report()
roxygen2::roxygenise()
size<-100
groups<-c(rep(1, size), rep(2, size),rep(3,size))
rho<-0.8
set.seed(081423)
data1<-rpkb(size, c(1,0,0),rho,method="rejvmf")
library(QuadratiK)
size<-100
groups<-c(rep(1, size), rep(2, size),rep(3,size))
rho<-0.8
set.seed(081423)
data1<-rpkb(size, c(1,0,0),rho,method="rejvmf")
data2<-rpkb(size, c(0,1,0),rho,method="rejvmf")
data3<-rpkb(size, c(0,0,1),rho,method="rejvmf")
dat<-rbind(data1$x,data2$x, data3$x)
pkbd<- pkbc(dat, 3)
pkbd@res_k
pkbd@res_k[[3]]$finalMemb
table(pkbd@res_k[[3]]$finalMemb)
library(srr)
srr_report()
srr_stats_pre_submit()
roxygen2::roxygenise()
devtools::document()
devtools::load_all()
remove.packages("QuadratiK")
devtools::build_manual()
library(autotest)
library(pkgcheck)
auto_test_package()
roxygen2::roxygenise()
library(pkgcheck)
library(autotest)
library(QuadratiK)
autotest::autotest_package()
x <- pkgcheck::pkgcheck()
x <- pkgcheck::pkgcheck()
summary(x)
x
roxygen2::roxygenise()
rlang::last_trace()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
dat <- rbind(matrix(rnorm(200),ncol=2),matrix(rnorm(200,3),ncol=2),matrix(rnorm(200,6),ncol=2))
devtools::build_vignettes()
devtools::build_vignettes()
head(wireless)
wire <- wireless[,-8]
labels <- wireless[,8]
wire_norm <- wire/sqrt(rowSums(wire^2))
set.seed(2468)
res_pk <- pkbc(as.matrix(wire_norm),3:6)
print(res_pk)
summary(res_pk)
plot(res_pk)
extract_stats(res_pk)
extract_stats(res_pk, 4)
library(mclust)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
dat <- rbind(matrix(rnorm(200),ncol=2),matrix(rnorm(200,3),ncol=2),matrix(rnorm(200,6),ncol=2))
dim(dat)
res <- pkbc(dat,c(2:4))
roxygen2::roxygenise()
devtools::load_all()
res <- pkbc(dat,c(2:4))
newdat <- rbind(matrix(rnorm(20),ncol=2),matrix(rnorm(20,3),ncol=2),matrix(rnorm(20,6),ncol=2))
predict(pkbc,3,newdat)
roxygen2::roxygenise()
devtools::load_all()
predict(pkbc,3,newdat)
predict(res,3,newdat)
debug(predict)
predict(res,3,newdat)
roxygen2::roxygenise()
devtools::load_all()
predict(res,3,newdat)
undebug(predict)
predict(res,3,newdat)
predict(res,4,newdat)
predict(res,1,newdat)
predict(res,2,newdat)
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::load_all()
predict(res,2)
?QuadratiK::plot
roxygen2::roxygenise()
devtools::load_all()
plot(res)
roxygen2::roxygenise()
devtools::load_all()
plot(res)
show(res)
source("~/GitHub/QuadratiK-package/R/clustering_functions.R")
roxygen2::roxygenise()
devtools::load_all()
show(res)
roxygen2::roxygenise()
devtools::load_all()
dat <- rbind(matrix(rnorm(200),ncol=2),matrix(rnorm(200,3),ncol=2),matrix(rnorm(200,6),ncol=2))
res <- pkbc(dat,c(2:4))
show(res)
print(res)
summary(res)
predict(res,3)
newdat <- rbind(matrix(rnorm(20),ncol=2),matrix(rnorm(20,3),ncol=2),matrix(rnorm(20,6),ncol=2))
predict(res,3,newdat)
plot(res)
extract_stats(res)
extract_stats(res,3)
roxygen2::roxygenise()
devtools::load_all()
plot(res)
show(res)
summary(res)
extract_stats(res,3)
predict(res,3,newdat)
predict(res,3)
plot(res)
show(res)
summary(res)
predict(res,3,newdat)
predict(res,3)
plot(res)
?QuadratiK::plot
?summary.pkbc
?QuadratiK::summary
devtools::load_all()
devtools::load_all()
roxygen2::roxygenise()
?QuadratiK::summary
?QuadratiK::estract_stats
library(QuadratiK)
?QuadratiK::estract_stats
?QuadratiK::extract_stats
?QuadratiK::pkbc
roxygen2::roxygenise()
devtools::load_all()
?QuadratiK::summary
?QuadratiK::summary
roxygen2::roxygenise()
?QuadratiK::summary
?QuadratiK::summary
QuadratiK::summary()
QuadratiK::summary
showMethods(summary)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::document()
devtools::load_all()
devtools::build_vignettes()
library(sphunif)
avail_cir_tests
install.packages("sphunif")
install.packages("sphunif")
library(sphunif)
?sph_stat_Poisson
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::build_manual()
cranlogs::cran_downloads()
cranlogs::cran_downloads("QuadratiK")
cranlogs::cran_downloads("QuadratiK", when = "last-month")
library(testthat)
# dimension = 2
dat<-rbind(matrix(rnorm(50),ncol=2),
matrix(rnorm(50,4),ncol=2),
matrix(rnorm(50,2),ncol=2))
y <- rep(c(1,2,3),each=25)
pkbd_res<- pkbc(dat, c(2,3))
expect_error(extract_stats(pkbd_res, 4),
"The provided pkbc object does not contain results for the requested
number of clusters")
extract_stats(pkbd_res, 4)
expect_error(extract_stats(pkbd_res, 4),
"The provided pkbc object does not contain results for the requested
number of clusters")
res1 <- extract_stats(pkbd_res, 3, true_label = NULL)
res1 <- extract_stats(pkbd_res, 3)
expect_equal(length(res1), 2)
# dimension = 3
dat<-rbind(matrix(rnorm(60),ncol=3),
matrix(rnorm(60,4),ncol=3),
matrix(rnorm(60,2),ncol=3))
y <- rep(c(1,2,3),each=20)
pkbd_res<- pkbc(dat, c(2,3))
res1 <- extract_stats(pkbd_res, 2)
res2 <- extract_stats(pkbd_res, 3)
expect_equal(length(res1), 3)
expect_equal(length(res2), 3)
# dimension = 4
dat<-rbind(matrix(rnorm(60),ncol=4),
matrix(rnorm(60,4),ncol=4),
matrix(rnorm(60,2),ncol=4))
y <- rep(c(1,2,3),each=15)
pkbd_res<- pkbc(dat, c(2,3))
res1 <- extract_stats(pkbd_res, 2)
res2 <- extract_stats(pkbd_res, 3)
expect_equal(length(res1), 4)
expect_equal(length(res2), 4)
library(autotest)
autotest_package()
library(srr)
srr_report()
srr_stats_pre_submit()
library(pkgcheck)
x <- pkgcheck()
x <- pkgcheck()
summary(x)
x
roxygen2::roxygenise()
summary(x)
roxygen2::roxygenise()
dat <- rbind(matrix(rnorm(100),ncol=2),matrix(rnorm(100,5),ncol=2))
#' res <- pkbc(dat,2:4)
dat <- rbind(matrix(rnorm(100),ncol=2),matrix(rnorm(100,5),ncol=2))
res <- pkbc(dat,2:4)
devtools::load_all()
dat <- rbind(matrix(rnorm(100),ncol=2),matrix(rnorm(100,5),ncol=2))
res <- pkbc(dat,2:4)
predict(res,3)
newdat <- rbind(matrix(rnorm(10),ncol=2),matrix(rnorm(10,5),ncol=2))
pr_res <- predict(res,2,newdat)
pr_res$Memb
roxygen2::roxygenise()
library(mclust)
devtools::document()
devtools::document()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::build_manual()
library(usethis)
use_pkgdown_github_pages()
?use_pkgdown_github_pages()
gh_token_help()
create_github_token("https://github.com/giovsaraceno")
?gitcreds::gitcreds_set()
gitcreds::gitcreds_set(url = "https://github.com/giovsaraceno")
use_pkgdown_github_pages()
gh_token_help()
vignette("package", package = "gitcreds")
gitcreds::gitcreds_set()
use_pkgdown_github_pages()
usethis::use_pkgdown_github_pages()
gitcreds::gitcreds_set(url = "https://github.com/giovsaraceno/QuadratiK-package")
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown_github_pages()
gh_token_help()
library(usethis)
gh_token_help()
edit_r_environ()
usethis::use_pkgdown_github_pages()
usethis::use_github_pages(branch = "gh-pages", path = "/", cname = NA)
usethis::use_github_pages(branch = "gh-pages", path = "/", cname = NA)
usethis::use_github_pages(branch = "gh-pages", path = "/", cname = NA)
usethis::use_pkgdown_github_pages()
usethis::use_github_pages(branch = "gh-pages", path = "/", cname = NA)
roxygen2::roxygenise()
usethis::use_github_pages(branch = "gh-pages", path = "/", cname = NA)
pkgload::dev_help('summary,pkbc-method')
usethis::use_github_pages(branch = "gh-pages", path = "/", cname = NA)
roxygen2::roxygenise()
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown()
usethis::use_github_pages(branch = "gh-pages", path = "/docs", cname = NA)
devtools::document()
devtools::load_all()
devtools::build_manual()
usethis::use_github_pages(branch = "master", path = "/docs", cname = NA)
usethis::use_github_pages(branch = "master", path = "/docs", cname = NA)
usethis::use_github_pages(branch = "master", path = "/docs", cname = NA)
usethis::use_pkgdown_github_pages()
usethis::use_pkgdown()
library(usethis)
?use_pkgdown_github_pages
usethis::use_pkgdown_github_pages()
usethis::use_github_pages(branch = "master", path = "/docs", cname = NA)
use_pkgdown()
roxygen2::roxygenise()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::document()
devtools::document()
roxygen2::roxygenise()
devtools::load_all()
devtools::build_vignettes()
devtools::build_manual()
devtools::document()
devtools::build_manual()
rho =.8
n=10
p=3
mu <- c(1,0,0)
lambda <- (2*rho)/(1+rho^2)
beta_lambda <- lambda/(2 - lambda)
C_d_lambda <- function(beta){
return(-4*(p - 1)*beta^3 + (4*p - lambda^2*(p - 2)^2)*beta^2 +
2*p*(p - 2)*lambda^2*beta - p^2*lambda^2)
}
beta_star <- uniroot(C_d_lambda, interval = c(beta_lambda, 1),
tol = tol.eps, maxiter = max.iter)
max.iter = 1000
tol.eps = .Machine$double.eps^0.25
C_d_lambda <- function(beta){
return(-4*(p - 1)*beta^3 + (4*p - lambda^2*(p - 2)^2)*beta^2 +
2*p*(p - 2)*lambda^2*beta - p^2*lambda^2)
}
beta_star <- uniroot(C_d_lambda, interval = c(beta_lambda, 1),
tol = tol.eps, maxiter = max.iter)
beta_star
#'                        fixed seed
#' @srrstats {G5.2,G5.2a,G5.2b} all the error and warning messages are tested
#' @srrstats {PD4.0} the numeric output are tested
#' @srrstats {PD4.2} The function is tested for all the methods (distributions)
#'                   available
#' @srrstats {PD4.3} different values of the \code{uniroot} function are tested
#' @srrstats {PD4.4} The function uniroot satisfies this standard.
#'
#'
#' @noRd
library(testthat)
# Check the errors
set.seed(123)
expect_error(rpkb(10, mu = c(1,0,0), rho = 2),
'Input argument rho must be within [0,1)',fixed=TRUE)
expect_error(rpkb(10, mu = c(0,0,0), rho = 0.8),
'Input argument mu cannot be a vector of zeros',fixed=TRUE)
expect_error(rpkb(-10, mu = c(1,0,0), rho = 0.8),
'n must be a positive integer',fixed=TRUE)
expect_error(rpkb(10, mu = c(1,0,0), rho = 0.8, method = "invalid"),
'Unknown method',fixed=TRUE)
#------------------------------------------------------
## Generating data point on the Sphere
## "rejvmf"
size <- 100
rho <- 0.8
mu <- c(1,0,0)
pkbd_dat <- rpkb(size, mu = mu, rho = rho, method = "rejvmf")
expect_equal(dim(pkbd_dat$x),c(size,length(mu)))
expect_true(is.matrix(pkbd_dat$x))
expect_equal(rowSums(pkbd_dat$x^2), rep(1,size))
## "rejacg"
size <- 100
rho <- 0.8
mu <- c(1,0,0)
pkbd_dat <- rpkb(size, mu = mu, rho = rho, method = "rejacg")
expect_equal(dim(pkbd_dat$x),c(size,length(mu)))
expect_true(is.matrix(pkbd_dat$x))
expect_equal(rowSums(pkbd_dat$x^2), rep(1,size))
pkbd_dat <- rpkb(size, mu = mu, rho = rho, method = "rejacg", max.iter=20)
expect_less_than(pkbd_dat$beta$iter, 20)
expect_lt(pkbd_dat$beta$iter, 20)
pkbd_dat$beta
pkbd_dat
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
## "rejacg"
size <- 100
rho <- 0.8
mu <- c(1,0,0)
pkbd_dat <- rpkb(size, mu = mu, rho = rho, method = "rejacg")
expect_equal(dim(pkbd_dat$x),c(size,length(mu)))
expect_true(is.matrix(pkbd_dat$x))
expect_equal(rowSums(pkbd_dat$x^2), rep(1,size))
pkbd_dat <- rpkb(size, mu = mu, rho = rho, method = "rejacg", max.iter=20)
expect_lt(pkbd_dat$beta$iter, 20)
pkbd_dat <- rpkb(size, mu = mu, rho = rho, method = "rejacg", tol.eps=1e-7)
expect_less_than(1e-7, pkbd_dat$beta$estim.prec)
expect_lt(1e-7, pkbd_dat$beta$estim.prec)
devtools::build_manual()
library(QuadratiK)
